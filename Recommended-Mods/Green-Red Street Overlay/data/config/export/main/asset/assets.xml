<ModOps>
  
  <!-- Improvement for the mod colorblind friendly street overlays from Callesen58, downloaded here: https://www.nexusmods.com/anno1800/mods/6 -->
  
  <!-- The colour numbers are signed int. -->
  <!-- You define your ARGB value for colour and calculate each of these 4 values into Hex, eg with this tool: https://www.rapidtables.com/convert/number/decimal-to-binary.html -->
  <!-- eg. blue: 255 0 0 255 -> FF0000FF -->
  <!-- And then you convert this into decimal: 4278190335 -->
  <!-- And finally you convert this to signed int and you are done -2129125451. I did not found a converter for this, but this python code will do: -->
  <!-- import binascii -->
  <!-- import struct -->
  <!-- checkstring = "4278190335".encode() -->
  <!-- r = struct.unpack("i", struct.pack("I", binascii.crc32(checkstring)))[0] -->
  <!-- print(r) -->
  
  <!-- FullColor is the full satisfaction range. -->
  <!-- start/mid/end are all the not full one, but decreasing in 10% steps satisfaction. -->
  <!-- I think there is no need for different colours here, since you should avaoid it anyways -->
  
  <ModOp Type="merge" GUID='140057' Path="/Values/StreetOverlayFeature">
    <!-- <StreetOverlayFeature> -->
      <CostColorGradient>
        <Regular>
          <FullColor>-3345059</FullColor>
          <StartColor>-7908552</StartColor>
          <MidColor>-7908552</MidColor>
          <EndColor>-7908552</EndColor>
        </Regular>
        <Blueprint>
          <StartColor>2107590479</StartColor>
          <MidColor>2107590479</MidColor>
          <EndColor>2107590479</EndColor>
        </Blueprint>
      </CostColorGradient>
      <FactorySelection>
        <RangeHighlight>
          <Regular>
              <PathColor>2054092135</PathColor>
          </Regular>
        </RangeHighlight>
      </FactorySelection>
      <RadiusBuildings>
        <PotentialAffectedHighlight>
          <BorderColor>1683674838</BorderColor>
        </PotentialAffectedHighlight>
      </RadiusBuildings>
    <!-- </StreetOverlayFeature> -->
  </ModOp>


</ModOps>

